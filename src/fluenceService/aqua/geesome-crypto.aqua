import findSubscribers from "@fluencelabs/aqua-dht/pubsub.aqua"

service GeesomeCrypto("GeesomeCrypto"):
  checkSignature(from: string, data: string, seqno: string, signature: string) -> bool

data Event:
    data: string
    from: string
    seqno: string
    signature: string

service ClientAPI("api"):
    receive_event(topic: string, e: Event)

func fanout_event(topic: string, event: Event, call: string -> ()):
    call("will check signature")
    try:
        sigValid <- GeesomeCrypto.checkSignature(event.from, event.data, event.seqno, event.signature)
    catch e:
        call("checkSignature failed")
    call("did check signature")
    if sigValid == false:
        call("signature_not_valid")
    else:
        call("signature is valid")
        subs <- findSubscribers(topic)
        for r <- subs par:
            on r.peer_id via r.relay_id!:
                ClientAPI.receive_event(topic, event)
                co call("receive_event")

        co call("done")